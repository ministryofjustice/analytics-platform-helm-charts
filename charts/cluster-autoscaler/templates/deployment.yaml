apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: default
  labels:
    app: cluster-autoscaler
  annotations:
    iam.amazonaws.com/role: "{{ .Values.env }}-cluster-autoscaler"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: cluster-autoscaler
  template:
    metadata:
      labels:
        app: cluster-autoscaler
    spec:
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
      {{- range . }}
        - name: {{ . }}
      {{- end }}
      {{- end }}
      serviceAccountName: {{ .Release.Name }}
      containers:
        - image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          name: cluster-autoscaler
          resources:
{{ toYaml .Values.resources | indent 12 }}
          command:
            - ./cluster-autoscaler
            - --v=4
            - --stderrthreshold=info
            - --logtostderr=true
            - --cloud-provider=aws
            - --skip-nodes-with-local-storage=false
            - --namespace=default
          {{- if .Values.autoscalingGroups }}
            {{- range .Values.autoscalingGroups }}
            - --nodes={{ .minSize }}:{{ .maxSize }}:{{ .name }}
            {{- end }}
          {{- end }}
          env:
            - name: AWS_REGION
              value: {{ .Values.aws_region }}
          volumeMounts:
            - name: ssl-certs
              mountPath: /etc/ssl/certs/ca-certificates.crt
              readOnly: true
          imagePullPolicy: "Always"
      volumes:
        - name: ssl-certs
          hostPath:
            path: "/etc/ssl/certs/ca-certificates.crt"
