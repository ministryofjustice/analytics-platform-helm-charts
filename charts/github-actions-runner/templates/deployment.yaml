apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ template "github-actions-runner.fullname" . }}"
  labels:
    app.kubernetes.io/name: {{ include "github-actions-runner.name" . | quote }}
    helm.sh/chart: {{ include "github-actions-runner.chart" . | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount | quote }}
{{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ .Release.Name | quote }}
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
      {{- if .Values.podAnnotations }}
      annotations:
        {{- range $key, $value := .Values.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
      {{- end }}
    spec:
      volumes:
      - name: dockersocket
        hostPath:
          path: "/var/run/docker.sock"
      containers:
      - name: runner
        image: {{ printf "%s:%s"  .Values.image.repository .Values.image.tag | quote }}
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        env:
        {{- if eq .Values.orgRunner "true" }}
        - name: ORG_RUNNER
          value: "true"
        - name: ORG_NAME
          value: {{ .Values.orgName | quote }}
        {{- else }}
        - name: ORG_RUNNER
          value: "false"
        - name: REPO_URL
          value: {{ .Values.repoUrl | quote }}
        {{- end }}
        - name: ACCESS_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secretAccessTokenName | quote }}
              key: "token"
        - name: LABELS
          value: {{ .Values.labels | quote }}
        - name: DOCKER_HOST
          value: tcp://localhost:2376
        {{- if .Values.runnerNamePrefix }}
        - name: RUNNER_NAME_PREFIX
          value: {{ .Values.runnerNamePrefix | quote }}
        {{- else }}
        - name: RUNNER_NAME
          valueFrom:
            fieldRef:
              fieldPath: "metadata.name"
        {{- end }}
        volumeMounts:
        - name: dockersocket
          mountPath: "/var/run/docker.sock"
      - name: dind
        command:
        - dockerd
        - --host=unix:///var/run/docker.sock
        - --host=tcp://0.0.0.0:2376
        env:
        - name: DOCKER_TLS_CERTDIR
        image: docker:19.03.12-dind
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
          readOnlyRootFilesystem: false
        stdin: true
        tty: true
