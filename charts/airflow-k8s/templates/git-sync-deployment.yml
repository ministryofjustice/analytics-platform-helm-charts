apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-git-sync
  namespace: {{ .Release.Namespace }}
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app: {{ .Release.Name }}-git-sync
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}-git-sync

  replicas: 1
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-git-sync
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- range . }}
        - name: {{ . }}
      {{- end }}
      {{- end }}
      initContainers:
        - name: "delete-files"
          image: alpine:3.8
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: {{ .Release.Name }}-dags
              mountPath: "/git"
          command:
            - "sh"
            - "-cx"
            - "rm -rf /git/*"
      containers:
        - name: git-sync
          image: {{ .Values.gitSync.image.repository }}:{{ .Values.gitSync.image.tag }}
          imagePullPolicy: {{ .Values.gitSync.image.pullPolicy }}
          env:
            - name: GIT_SYNC_REPO
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-git-sync"
                  key: git-sync-repo
            - name: GIT_SYNC_ROOT
              value: "/git"
            - name: GIT_SYNC_BRANCH
              value: "{{ .Values.gitSync.branch }}"
            - name: GIT_SYNC_REV
              value: "FETCH_HEAD"
            - name: GIT_SYNC_WAIT
              value: "{{ .Values.gitSync.interval }}"

          volumeMounts:
            - name: {{ .Release.Name }}-dags
              mountPath: "/git"

      volumes:
        - name: {{ .Release.Name }}-dags
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-dags
