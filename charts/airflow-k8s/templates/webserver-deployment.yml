apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-webserver
  namespace: {{ .Release.Namespace }}
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app: {{ .Release.Name }}
    component: webserver
  annotations:
    checksum/config: {{ include (print $.Template.BasePath "/configmap.yml") . | sha256sum }}
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}
      component: webserver
  replicas: 3
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
        component: webserver
        airflow-redis-client: "true"
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- range . }}
        - name: {{ . }}
      {{- end }}
      {{- end }}
      serviceAccountName: {{ .Release.Name }}
      containers:
        - name: webserver
          image: {{ .Values.airflow.image.repository }}:{{ .Values.airflow.image.tag }}
          imagePullPolicy: {{ .Values.airflow.image.pullPolicy }}
          command:
            - "airflow"
          args:
            - "webserver"
          ports:
            - name: http
              containerPort: {{ .Values.airflow.image.port }}
          env:
            {{ include "env" . | indent 12 }}
            - name: REDIS_HOST
              value: "{{ printf "%s-%s-%s.%s" .Release.Name "redis" "master" .Release.Namespace | trunc 63 | trimSuffix "-" }}"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ printf "%s-%s" .Release.Name "redis" | trunc 63 | trimSuffix "-" }}"
                  key: redis-password
          volumeMounts:
            - name: {{ .Release.Name }}-config
              mountPath: /root/airflow/airflow.cfg
              subPath: airflow.cfg
            - name: {{ .Release.Name }}-config
              mountPath: /root/airflow/webserver_config.py
              subPath: webserver_config.py
            - name: {{ .Release.Name }}-secrets
              mountPath: /root/airflow/client_secret.json
              subPath: client_secret.json
            - name: {{ .Release.Name }}-dags
              mountPath: "/root/airflow/dags/"
            - name: {{ .Release.Name }}-logs
              mountPath: "/root/airflow/logs/"
          livenessProbe:
            exec:
              command:
                - ls
                - /root/airflow/airflow-webserver.pid
            initialDelaySeconds: 15
            periodSeconds: 5
        # leave this disabled for now - until we can get readiness probe to accept
        # statuscode 302 as valid or we add a /healthz endpoint to airflow
        #   readinessProbe:
        #     httpGet:
        #       path: /
        #       port: {{ .Values.airflow.image.port }}
        #       scheme: HTTP
        #     initialDelaySeconds: 10
      volumes:
        - name: {{ .Release.Name }}-config
          configMap:
            name: {{ .Release.Name }}
        - name: {{ .Release.Name }}-secrets
          secret:
            secretName: {{ .Release.Name }}
        - name: {{ .Release.Name }}-dags
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-dags
        - name: {{ .Release.Name }}-logs
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-logs
