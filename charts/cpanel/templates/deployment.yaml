apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: "{{ .Chart.Name }}"
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app: "{{ .Chart.Name }}"
    host: {{ template "host" . }}
spec:
  replicas: 3
  template:
    metadata:
      labels:
        app: "{{ .Chart.Name }}"
      annotations:
        iam.amazonaws.com/role: "{{ .Values.aws.iamRole }}"
    spec:
      serviceAccountName: "{{ .Chart.Name }}"
      containers:
        - name: "{{ .Chart.Name }}"
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          ports:
            - name: http
              containerPort: {{ .Values.django.port }}
          env:
          {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: "{{ $value }}"
          {{- end }}
          {{- range $key, $value := .Values.secretEnv }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: "{{ $.Chart.Name }}"
                  key: {{ $key }}
          {{- end }}
            - name: ALLOWED_HOSTS
              value: "*"
            - name: BUCKET_REGION
              value: "{{ .Values.aws.defaultRegion }}"
            - name: DB_HOST
              value: {{ template "postgresHost" . }}
            - name: DB_NAME
              value: "{{ .Values.postgresql.postgresDatabase }}"
            - name: DB_USER
              value: "{{ .Values.postgresql.postgresUser }}"
            - name: DB_PASSWORD
              valueFrom: {{ template "postgresPassword" . }}
            - name: DJANGO_SETTINGS_MODULE
              value: "{{ .Values.django.settingsModule }}"
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
