apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    app: {{ template "fullname" .}}
spec:
  replicas: 3
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
      annotations:
        iam.amazonaws.com/role: {{ .Values.AWS.IAMRole }}
    spec:
      containers:
        - name: api
          image: "{{ .Values.API.Image.Repository }}:{{ .Values.API.Image.Tag }}"
          imagePullPolicy: {{ .Values.API.Image.PullPolicy }}
          ports:
            - name: http
              containerPort: 8000
          env:
            - name: ALLOWED_HOSTS
              value: "*"
              #valueFrom:
                #fieldRef:
                  #fieldPath: status.podIP
            - name: BUCKET_REGION
              value: "{{ .Values.AWS.DefaultRegion }}"
            - name: DB_HOST
              value: {{ if .Values.tags.branch -}}
                  "{{ printf "%s-%s" .Release.Name "postgresql" | trunc 63 | trimSuffix "-" }}"
                {{- else -}}
                  "{{ .Values.postgresql.postgresHost }}"
                {{- end }}
            - name: DB_NAME
              value: "{{ .Values.postgresql.postgresDatabase }}"
            - name: DB_USER
              value: "{{ .Values.postgresql.postgresUser }}"
            - name: DB_PASSWORD
              {{ if .Values.tags.branch -}}
              valueFrom:
                secretKeyRef:
                  name: {{ printf "%s-%s" .Release.Name "postgresql" | trunc 63 | trimSuffix "-" }}
                  key: postgres-password
              {{- else -}}
                  value: "{{ .Values.API.RDSPassword }}"
              {{- end }}
            - name: DEBUG
              value: "{{ .Values.API.Environment.DEBUG }}"
            - name: DJANGO_SETTINGS_MODULE
              value: "control_panel_api.settings"
            - name: ENV
              value: "{{ .Values.API.Environment.ENV }}"
            - name: IAM_ARN_BASE
              value: "{{ .Values.API.Environment.IAM_ARN_BASE }}"
            - name: K8S_WORKER_ROLE_NAME
              value: "{{ .Values.API.Environment.K8S_WORKER_ROLE_NAME }}"
            - name: LOGS_BUCKET_NAME
              value: "{{ .Values.API.Environment.LOGS_BUCKET_NAME }}"
          readinessProbe:
            httpGet:
              path: /auth/login
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
