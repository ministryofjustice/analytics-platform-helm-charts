apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    repo: "{{ .Values.WebApp.GithubRepo }}"
    app: {{ template "fullname" . }}
spec:
  replicas: {{ .Values.WebApp.ReplicaCount }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
      annotations:
        checksum/secrets: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
        iam.amazonaws.com/role: {{ .Values.AWS.IAMRole }}
    spec:
      containers:
        - name: auth-proxy
          image: "{{ .Values.AuthProxy.Image.Repository }}:{{ .Values.AuthProxy.Image.Tag }}"
          imagePullPolicy: {{ .Values.AuthProxy.Image.PullPolicy }}
          ports:
            - name: http
              containerPort: 3000
          env:
            - name: USER
              value: {{ .Values.Username }}
            - name: AUTH0_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ template "fullname" . }}
                  key: client_secret
            - name: AUTH0_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ template "fullname" . }}
                  key: client_id
            - name: AUTH0_DOMAIN
              valueFrom:
                secretKeyRef:
                  name: {{ template "fullname" . }}
                  key: domain
            - name: AUTH0_CALLBACK_URL
              valueFrom:
                secretKeyRef:
                  name: {{ template "fullname" . }}
                  key: callback_url
            - name: COOKIE_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ template "fullname" . }}
                  key: cookie_secret
            - name: TARGET_URL
              value: "http://localhost:{{ .Values.WebApp.Port }}/"
            - name: AUTHENTICATION_REQUIRED
              value: "{{ .Values.AuthProxy.AuthenticationRequired }}"
            - name: IP_RANGES
              value: "{{ .Values.AuthProxy.IPRanges }}"
            - name: AUTH0_PASSWORDLESS
              value: "true"
            - name: PORT
              value: "3000"
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5

        - name: webapp
          image: "{{ .Values.WebApp.Image.Repository }}:{{ .Values.WebApp.Image.Tag | replace ":" "" }}"
          imagePullPolicy: {{ .Values.WebApp.Image.PullPolicy }}
          ports:
            - containerPort: {{ .Values.WebApp.Port }}
          livenessProbe:
            httpGet:
              path: /?healthz
              port: {{ .Values.WebApp.Port }}
            initialDelaySeconds: 180
            periodSeconds: 10
            timeoutSeconds: 60
          resources:
            requests:
              cpu: 10m
          volumeMounts:
            - name: varlognginx
              mountPath: /var/log/nginx
            - name: varlogshinyserver
              mountPath: /var/log/shiny-server

        - name: fluentd
          image: "{{ .Values.Fluentd.Image.Repository }}:{{ .Values.Fluentd.Image.Tag }}"
          imagePullPolicy: {{ .Values.Fluentd.Image.PullPolicy }}
          env:
            - name:  FLUENT_ELASTICSEARCH_SCHEME
              valueFrom:
                secretKeyRef:
                  name: {{ template "fullname" . }}
                  key: elasticsearch_scheme
            - name:  FLUENT_ELASTICSEARCH_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ template "fullname" . }}
                  key: elasticsearch_host
            - name:  FLUENT_ELASTICSEARCH_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ template "fullname" . }}
                  key: elasticsearch_port
            - name:  FLUENT_ELASTICSEARCH_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ template "fullname" . }}
                  key: elasticsearch_username
            - name:  FLUENT_ELASTICSEARCH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "fullname" . }}
                  key: elasticsearch_password
            - name:  FLUENT_SOURCE_TAG
              valueFrom:
                configMapKeyRef:
                  name: {{ template "fullname" . }}-fluentd
                  key: source_tag
            - name:  FLUENT_ELASTICSEARCH_LOGSTASH_PREFIX
              valueFrom:
                configMapKeyRef:
                  name: {{ template "fullname" . }}-fluentd
                  key: logstash_prefix
          volumeMounts:
            - name: fluentd-config
              mountPath: /fluentd/etc
            - name: varlognginx
              mountPath: /var/log/nginx
            - name: varlogshinyserver
              mountPath: /var/log/shiny-server

      volumes:
        - name: varlognginx
          emptyDir: {}
        - name: varlogshinyserver
          emptyDir: {}
        - name: fluentd-config
          configMap:
            name: {{ template "fullname" . }}-fluentd
            items:
            - key: fluent.conf
              path: fluent.conf
